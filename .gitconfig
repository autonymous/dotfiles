[user]
    name = Ory Band
    email = oryband@gmail.com
[push]
    default = simple
[credential]
    helper = cache --timeout=3600
[apply]
    whitespace = fix
[core]
    editor = vim
    whitespace = space-before-tab,trailing-space,blank-at-eol,cr-at-eol,blank-at-eof
	excludesfile = /Users/ory/.gitignore
[color]
    ui = true
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[merge]
    log = true
[alias]
    l = log --oneline --graph
    l2 = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
    l3 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all

    s = status --short

    d = !"git diff-index --quiet HEAD -- || clear; git diff --patch-with-stat"
    di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"

    ds = !"git diff-index --quiet HEAD -- || clear; git diff --patch-with-stat --staged"
    dsi = !"d() { git diff --patch-with-stat --staged HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"

    # Pull in remote changes for the current repository and all its submodules
    ;p = !"git pull; git submodule foreach git pull origin master"

    cl = clone --recursive

    c = commit --verbose

    co = checkout
    cb = checkout -b

    tags = tag --list
    branches = branch --all
    b = branch
    remotes = remote --verbose

    pf = push --force
    undopush = push --force origin HEAD^:master

    # Credit an author on the latest commit
    ;credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"
    # Interactive rebase with the given number of latest commits
    ;reb = "!r() { git rebase -i HEAD~$1; }; r"
